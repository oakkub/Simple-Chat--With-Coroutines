apply plugin: 'com.android.application'
apply from: 'codequality.gradle'
apply from: '../config/jacoco.gradle'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def keystorePropertiesFile = rootProject.file("signing.properties")
def keystoreProperties = new Properties()
def globalConfig = rootProject.extensions.getByName("ext")
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {

    // Our common part of fetching the git hash commit then appending to versionName for internal build.
    def gitCommitHash = "git rev-parse --short HEAD".execute().text.trim()
    def gitCommitMessage = "git show -s --format=%B HEAD".execute().text.trim()
    def ticketValue = ""
    try {
        ticketValue = "." + (gitCommitMessage =~ "\\[(.*)\\]")[0][1]
    } catch (Exception e) {
        logger.info("This could be a CI build on pre-merged branch so there is no ticket id found!")
    }

    project.ext.set("versionNameSuffix", "$gitCommitHash${ticketValue}")

    signingConfigs {
        config {
            // Remember to edit signing.properties to have the correct info for release build.
            storeFile file('../keystore_production')
            storePassword keystoreProperties['KEYSTORE_PASSWORD']
            keyPassword keystoreProperties['KEY_PASSWORD']
            keyAlias keystoreProperties['KEY_ALIAS']
        }
    }

    compileSdkVersion globalConfig["android_compile_sdk_version"]
    defaultConfig {
        applicationId "com.nimbl3.android"
        minSdkVersion globalConfig["android_min_sdk_version"]
        targetSdkVersion globalConfig["android_target_sdk_version"]
        versionCode globalConfig["android_version_code"]
        versionName globalConfig["android_version_name"]
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            // For quickly testing build with proguard, enable this
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/MANIFEST.mf'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/rxjava.properties'
    }

    flavorDimensions "stage"
    productFlavors {
        production {
            applicationId "com.nimbl3"
        }

        staging {
            applicationId "com.nimbl3.staging"
        }

        staging_internal {
            applicationId "com.nimbl3.staging"
            versionNameSuffix ".${project.versionNameSuffix}"
        }
    }

    sourceSets {
        staging {
            res.srcDirs = ['src/staging/res']
        }
        staging_internal {
            res.srcDirs = ['src/staging/res']
        }
        test {
            java.srcDirs += 'src/test/kotlin'
            resources.srcDirs += ['src/test/resources']
        }
    }

    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation project(':data')
    kapt(
            'androidx.lifecycle:lifecycle-compiler:2.0.0-alpha1',
            "com.google.dagger:dagger-compiler:$dagger_version",
            "com.google.dagger:dagger-android-processor:$dagger_version"
    )

    implementation(
            fileTree(dir: 'libs', include: ['*.jar']),
            "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",

            "androidx.recyclerview:recyclerview:$android_x_version",
            "com.google.android.material:material:$android_x_version",
            "androidx.constraintlayout:constraintlayout:1.1.2",

            "androidx.lifecycle:lifecycle-extensions:2.0.0-alpha1",
            "androidx.lifecycle:lifecycle-runtime:2.0.0-alpha1",

            "androidx.core:core-ktx:$android_ktx_version",

            'androidx.multidex:multidex:2.0.0',

            "com.google.dagger:dagger:$dagger_version",
            "com.google.dagger:dagger-android-support:$dagger_version",

            'com.facebook.fresco:fresco:1.9.0',
            "com.facebook.fresco:imagepipeline-okhttp3:1.9.0",
            "com.jakewharton.timber:timber:$timber_log_version"
    )

    testImplementation(
            "junit:junit:$test_junit_version",
            "com.nhaarman:mockito-kotlin:$test_mockito_version",
    )

    androidTestImplementation(
            'androidx.test:runner:1.1.0-alpha3',
            'androidx.test:rules:1.1.0-alpha3'
    )
}
